{"id":"../../node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","dependencies":[{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\validators\\buildMatchMemberExpression.js.map","includedInParent":true,"mtime":1695821070685},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\package.json","includedInParent":true,"mtime":1699342775613},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\package.json","includedInParent":true,"mtime":1695821070792},{"name":"./matchesPattern.js","loc":{"line":7,"column":30,"index":156},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\validators\\buildMatchMemberExpression.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\validators\\matchesPattern.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchMemberExpression;\nvar _matchesPattern = require(\"./matchesPattern.js\");\nfunction buildMatchMemberExpression(match, allowPartial) {\n  var parts = match.split(\".\");\n  return function (member) {\n    return (0, _matchesPattern.default)(member, parts, allowPartial);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"_matchesPattern","original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":19}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"require","original":{"line":1,"column":0},"generated":{"line":7,"column":22}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":29}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":30}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":51}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":52}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":8,"column":0}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"buildMatchMemberExpression","original":{"line":11,"column":24},"generated":{"line":8,"column":9}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"buildMatchMemberExpression","original":{"line":11,"column":50},"generated":{"line":8,"column":35}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"match","original":{"line":12,"column":2},"generated":{"line":8,"column":36}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":8,"column":41}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"allowPartial","original":{"line":13,"column":2},"generated":{"line":8,"column":43}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":8,"column":55}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":8,"column":57}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":9,"column":2}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"parts","original":{"line":15,"column":8},"generated":{"line":9,"column":6}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":9,"column":11}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"match","original":{"line":15,"column":16},"generated":{"line":9,"column":14}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":21},"generated":{"line":9,"column":19}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"split","original":{"line":15,"column":22},"generated":{"line":9,"column":20}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":27},"generated":{"line":9,"column":25}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":28},"generated":{"line":9,"column":26}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":31},"generated":{"line":9,"column":29}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":15,"column":32},"generated":{"line":9,"column":30}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":10,"column":2}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"member","original":{"line":17,"column":10},"generated":{"line":10,"column":9}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"member","original":{"line":17,"column":10},"generated":{"line":10,"column":19}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":24},"generated":{"line":10,"column":25}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":24},"generated":{"line":11,"column":4}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":29},"generated":{"line":11,"column":11}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":29},"generated":{"line":11,"column":12}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":29},"generated":{"line":11,"column":13}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"matchesPattern","original":{"line":17,"column":29},"generated":{"line":11,"column":15}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"matchesPattern","original":{"line":17,"column":29},"generated":{"line":11,"column":30}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"matchesPattern","original":{"line":17,"column":29},"generated":{"line":11,"column":31}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":43},"generated":{"line":11,"column":38}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"member","original":{"line":17,"column":44},"generated":{"line":11,"column":40}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":50},"generated":{"line":11,"column":46}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"parts","original":{"line":17,"column":52},"generated":{"line":11,"column":48}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":57},"generated":{"line":11,"column":53}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":"allowPartial","original":{"line":17,"column":59},"generated":{"line":11,"column":55}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":71},"generated":{"line":11,"column":67}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":11,"column":68}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":12,"column":2}},{"source":"../../src/validators/buildMatchMemberExpression.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":13,"column":0}}],"sources":{"../../src/validators/buildMatchMemberExpression.ts":"import matchesPattern from \"./matchesPattern.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n"},"lineCount":null}},"error":null,"hash":"7a360f663b47f24b6dfd66a74d40a7f0","cacheData":{"env":{}}}