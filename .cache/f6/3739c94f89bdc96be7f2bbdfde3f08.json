{"id":"../../node_modules/constantinople/lib/index.js","dependencies":[{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\package.json","includedInParent":true,"mtime":1699342775613},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\constantinople\\package.json","includedInParent":true,"mtime":1694927329877},{"name":"@babel/parser","loc":{"line":3,"column":23,"index":64},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\constantinople\\lib\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\parser\\lib\\index.js"},{"name":"@babel/types","loc":{"line":4,"column":16,"index":98},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\constantinople\\lib\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\index.js"},{"name":"./binaryOperation","loc":{"line":5,"column":32,"index":147},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\constantinople\\lib\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\constantinople\\lib\\binaryOperation.js"}],"generated":{"js":"\"use strict\";\nexports.__esModule = true;\nvar parser_1 = require(\"@babel/parser\");\nvar b = require(\"@babel/types\");\nvar binaryOperation_1 = require(\"./binaryOperation\");\nfunction expressionToConstant(expression, options) {\n    if (options === void 0) { options = {}; }\n    var constant = true;\n    function toConstant(expression) {\n        if (!constant)\n            return;\n        if (b.isArrayExpression(expression)) {\n            var result_1 = [];\n            for (var i = 0; constant && i < expression.elements.length; i++) {\n                var element = expression.elements[i];\n                if (b.isSpreadElement(element)) {\n                    var spread = toConstant(element.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        result_1.push.apply(result_1, spread);\n                    }\n                }\n                else if (b.isExpression(element)) {\n                    result_1.push(toConstant(element));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            return result_1;\n        }\n        if (b.isBinaryExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            return constant && binaryOperation_1[\"default\"](expression.operator, left, right);\n        }\n        if (b.isBooleanLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isCallExpression(expression)) {\n            var args = [];\n            for (var i = 0; constant && i < expression.arguments.length; i++) {\n                var arg = expression.arguments[i];\n                if (b.isSpreadElement(arg)) {\n                    var spread = toConstant(arg.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        args.push.apply(args, spread);\n                    }\n                }\n                else if (b.isExpression(arg)) {\n                    args.push(toConstant(arg));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            if (!constant)\n                return;\n            if (b.isMemberExpression(expression.callee)) {\n                var object = toConstant(expression.callee.object);\n                if (!object || !constant) {\n                    constant = false;\n                    return;\n                }\n                var member = expression.callee.computed\n                    ? toConstant(expression.callee.property)\n                    : b.isIdentifier(expression.callee.property)\n                        ? expression.callee.property.name\n                        : undefined;\n                if (member === undefined && !expression.callee.computed) {\n                    constant = false;\n                }\n                if (!constant)\n                    return;\n                if (canCallMethod(object, '' + member)) {\n                    return object[member].apply(object, args);\n                }\n            }\n            else {\n                if (!b.isExpression(expression.callee)) {\n                    constant = false;\n                    return;\n                }\n                var callee = toConstant(expression.callee);\n                if (!constant)\n                    return;\n                return callee.apply(null, args);\n            }\n        }\n        if (b.isConditionalExpression(expression)) {\n            var test = toConstant(expression.test);\n            return test\n                ? toConstant(expression.consequent)\n                : toConstant(expression.alternate);\n        }\n        if (b.isIdentifier(expression)) {\n            if (options.constants &&\n                {}.hasOwnProperty.call(options.constants, expression.name)) {\n                return options.constants[expression.name];\n            }\n        }\n        if (b.isLogicalExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            if (constant && expression.operator === '&&') {\n                return left && right;\n            }\n            if (constant && expression.operator === '||') {\n                return left || right;\n            }\n        }\n        if (b.isMemberExpression(expression)) {\n            var object = toConstant(expression.object);\n            if (!object || !constant) {\n                constant = false;\n                return;\n            }\n            var member = expression.computed\n                ? toConstant(expression.property)\n                : b.isIdentifier(expression.property)\n                    ? expression.property.name\n                    : undefined;\n            if (member === undefined && !expression.computed) {\n                constant = false;\n            }\n            if (!constant)\n                return;\n            if ({}.hasOwnProperty.call(object, '' + member) && member[0] !== '_') {\n                return object[member];\n            }\n        }\n        if (b.isNullLiteral(expression)) {\n            return null;\n        }\n        if (b.isNumericLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isObjectExpression(expression)) {\n            var result_2 = {};\n            for (var i = 0; constant && i < expression.properties.length; i++) {\n                var property = expression.properties[i];\n                if (b.isObjectProperty(property)) {\n                    if (property.shorthand) {\n                        constant = false;\n                        return;\n                    }\n                    var key = property.computed\n                        ? toConstant(property.key)\n                        : b.isIdentifier(property.key)\n                            ? property.key.name\n                            : b.isStringLiteral(property.key)\n                                ? property.key.value\n                                : undefined;\n                    if (!key || key[0] === '_') {\n                        constant = false;\n                    }\n                    if (!constant)\n                        return;\n                    if (b.isExpression(property.value)) {\n                        var value = toConstant(property.value);\n                        if (!constant)\n                            return;\n                        result_2[key] = value;\n                    }\n                    else {\n                        constant = false;\n                    }\n                }\n                else if (b.isObjectMethod(property)) {\n                    constant = false;\n                }\n                else if (b.isSpreadProperty(property)) {\n                    var argument = toConstant(property.argument);\n                    if (!argument)\n                        constant = false;\n                    if (!constant)\n                        return;\n                    Object.assign(result_2, argument);\n                }\n            }\n            return result_2;\n        }\n        if (b.isParenthesizedExpression(expression)) {\n            return toConstant(expression.expression);\n        }\n        if (b.isRegExpLiteral(expression)) {\n            return new RegExp(expression.pattern, expression.flags);\n        }\n        if (b.isSequenceExpression(expression)) {\n            for (var i = 0; i < expression.expressions.length - 1 && constant; i++) {\n                toConstant(expression.expressions[i]);\n            }\n            return toConstant(expression.expressions[expression.expressions.length - 1]);\n        }\n        if (b.isStringLiteral(expression)) {\n            return expression.value;\n        }\n        // TODO: TaggedTemplateExpression\n        if (b.isTemplateLiteral(expression)) {\n            var result_3 = '';\n            for (var i = 0; i < expression.quasis.length; i++) {\n                var quasi = expression.quasis[i];\n                result_3 += quasi.value.cooked;\n                if (i < expression.expressions.length) {\n                    result_3 += '' + toConstant(expression.expressions[i]);\n                }\n            }\n            return result_3;\n        }\n        if (b.isUnaryExpression(expression)) {\n            var argument = toConstant(expression.argument);\n            if (!constant) {\n                return;\n            }\n            switch (expression.operator) {\n                case '-':\n                    return -argument;\n                case '+':\n                    return +argument;\n                case '!':\n                    return !argument;\n                case '~':\n                    return ~argument;\n                case 'typeof':\n                    return typeof argument;\n                case 'void':\n                    return void argument;\n            }\n        }\n        constant = false;\n    }\n    var result = toConstant(expression);\n    return constant ? { constant: true, result: result } : { constant: false };\n}\nexports.expressionToConstant = expressionToConstant;\nfunction isSpreadable(value) {\n    return (typeof value === 'string' ||\n        Array.isArray(value) ||\n        (typeof Set !== 'undefined' && value instanceof Set) ||\n        (typeof Map !== 'undefined' && value instanceof Map));\n}\nfunction shallowEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        for (var key in a) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        for (var key in b) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction canCallMethod(object, member) {\n    switch (typeof object) {\n        case 'boolean':\n            switch (member) {\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'number':\n            switch (member) {\n                case 'toExponential':\n                case 'toFixed':\n                case 'toPrecision':\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'string':\n            switch (member) {\n                case 'charAt':\n                case 'charCodeAt':\n                case 'codePointAt':\n                case 'concat':\n                case 'endsWith':\n                case 'includes':\n                case 'indexOf':\n                case 'lastIndexOf':\n                case 'match':\n                case 'normalize':\n                case 'padEnd':\n                case 'padStart':\n                case 'repeat':\n                case 'replace':\n                case 'search':\n                case 'slice':\n                case 'split':\n                case 'startsWith':\n                case 'substr':\n                case 'substring':\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    return true;\n                default:\n                    return false;\n            }\n        default:\n            if (object instanceof RegExp) {\n                switch (member) {\n                    case 'test':\n                    case 'exec':\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n            return {}.hasOwnProperty.call(object, member) && member[0] !== '_';\n    }\n}\nvar EMPTY_OBJECT = {};\nvar lastSrc = '';\nvar lastConstants = EMPTY_OBJECT;\nvar lastOptions = EMPTY_OBJECT;\nvar lastResult = null;\nvar lastWasConstant = false;\nfunction isConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (lastSrc === src &&\n        shallowEqual(lastConstants, constants) &&\n        shallowEqual(lastOptions, options)) {\n        return lastWasConstant;\n    }\n    lastSrc = src;\n    lastConstants = constants;\n    var ast;\n    try {\n        ast = parser_1.parseExpression(src, options);\n    }\n    catch (ex) {\n        return (lastWasConstant = false);\n    }\n    var _a = expressionToConstant(ast, { constants: constants }), result = _a.result, constant = _a.constant;\n    lastResult = result;\n    return (lastWasConstant = constant);\n}\nexports.isConstant = isConstant;\nfunction toConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (!isConstant(src, constants, options)) {\n        throw new Error(JSON.stringify(src) + ' is not constant.');\n    }\n    return lastResult;\n}\nexports.toConstant = toConstant;\nexports[\"default\"] = isConstant;\nmodule.exports = isConstant;\nmodule.exports[\"default\"] = isConstant;\nmodule.exports.expressionToConstant = expressionToConstant;\nmodule.exports.isConstant = isConstant;\nmodule.exports.toConstant = toConstant;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/constantinople/lib/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}}],"sources":{"../../node_modules/constantinople/lib/index.js":"\"use strict\";\nexports.__esModule = true;\nvar parser_1 = require(\"@babel/parser\");\nvar b = require(\"@babel/types\");\nvar binaryOperation_1 = require(\"./binaryOperation\");\nfunction expressionToConstant(expression, options) {\n    if (options === void 0) { options = {}; }\n    var constant = true;\n    function toConstant(expression) {\n        if (!constant)\n            return;\n        if (b.isArrayExpression(expression)) {\n            var result_1 = [];\n            for (var i = 0; constant && i < expression.elements.length; i++) {\n                var element = expression.elements[i];\n                if (b.isSpreadElement(element)) {\n                    var spread = toConstant(element.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        result_1.push.apply(result_1, spread);\n                    }\n                }\n                else if (b.isExpression(element)) {\n                    result_1.push(toConstant(element));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            return result_1;\n        }\n        if (b.isBinaryExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            return constant && binaryOperation_1[\"default\"](expression.operator, left, right);\n        }\n        if (b.isBooleanLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isCallExpression(expression)) {\n            var args = [];\n            for (var i = 0; constant && i < expression.arguments.length; i++) {\n                var arg = expression.arguments[i];\n                if (b.isSpreadElement(arg)) {\n                    var spread = toConstant(arg.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        args.push.apply(args, spread);\n                    }\n                }\n                else if (b.isExpression(arg)) {\n                    args.push(toConstant(arg));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            if (!constant)\n                return;\n            if (b.isMemberExpression(expression.callee)) {\n                var object = toConstant(expression.callee.object);\n                if (!object || !constant) {\n                    constant = false;\n                    return;\n                }\n                var member = expression.callee.computed\n                    ? toConstant(expression.callee.property)\n                    : b.isIdentifier(expression.callee.property)\n                        ? expression.callee.property.name\n                        : undefined;\n                if (member === undefined && !expression.callee.computed) {\n                    constant = false;\n                }\n                if (!constant)\n                    return;\n                if (canCallMethod(object, '' + member)) {\n                    return object[member].apply(object, args);\n                }\n            }\n            else {\n                if (!b.isExpression(expression.callee)) {\n                    constant = false;\n                    return;\n                }\n                var callee = toConstant(expression.callee);\n                if (!constant)\n                    return;\n                return callee.apply(null, args);\n            }\n        }\n        if (b.isConditionalExpression(expression)) {\n            var test = toConstant(expression.test);\n            return test\n                ? toConstant(expression.consequent)\n                : toConstant(expression.alternate);\n        }\n        if (b.isIdentifier(expression)) {\n            if (options.constants &&\n                {}.hasOwnProperty.call(options.constants, expression.name)) {\n                return options.constants[expression.name];\n            }\n        }\n        if (b.isLogicalExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            if (constant && expression.operator === '&&') {\n                return left && right;\n            }\n            if (constant && expression.operator === '||') {\n                return left || right;\n            }\n        }\n        if (b.isMemberExpression(expression)) {\n            var object = toConstant(expression.object);\n            if (!object || !constant) {\n                constant = false;\n                return;\n            }\n            var member = expression.computed\n                ? toConstant(expression.property)\n                : b.isIdentifier(expression.property)\n                    ? expression.property.name\n                    : undefined;\n            if (member === undefined && !expression.computed) {\n                constant = false;\n            }\n            if (!constant)\n                return;\n            if ({}.hasOwnProperty.call(object, '' + member) && member[0] !== '_') {\n                return object[member];\n            }\n        }\n        if (b.isNullLiteral(expression)) {\n            return null;\n        }\n        if (b.isNumericLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isObjectExpression(expression)) {\n            var result_2 = {};\n            for (var i = 0; constant && i < expression.properties.length; i++) {\n                var property = expression.properties[i];\n                if (b.isObjectProperty(property)) {\n                    if (property.shorthand) {\n                        constant = false;\n                        return;\n                    }\n                    var key = property.computed\n                        ? toConstant(property.key)\n                        : b.isIdentifier(property.key)\n                            ? property.key.name\n                            : b.isStringLiteral(property.key)\n                                ? property.key.value\n                                : undefined;\n                    if (!key || key[0] === '_') {\n                        constant = false;\n                    }\n                    if (!constant)\n                        return;\n                    if (b.isExpression(property.value)) {\n                        var value = toConstant(property.value);\n                        if (!constant)\n                            return;\n                        result_2[key] = value;\n                    }\n                    else {\n                        constant = false;\n                    }\n                }\n                else if (b.isObjectMethod(property)) {\n                    constant = false;\n                }\n                else if (b.isSpreadProperty(property)) {\n                    var argument = toConstant(property.argument);\n                    if (!argument)\n                        constant = false;\n                    if (!constant)\n                        return;\n                    Object.assign(result_2, argument);\n                }\n            }\n            return result_2;\n        }\n        if (b.isParenthesizedExpression(expression)) {\n            return toConstant(expression.expression);\n        }\n        if (b.isRegExpLiteral(expression)) {\n            return new RegExp(expression.pattern, expression.flags);\n        }\n        if (b.isSequenceExpression(expression)) {\n            for (var i = 0; i < expression.expressions.length - 1 && constant; i++) {\n                toConstant(expression.expressions[i]);\n            }\n            return toConstant(expression.expressions[expression.expressions.length - 1]);\n        }\n        if (b.isStringLiteral(expression)) {\n            return expression.value;\n        }\n        // TODO: TaggedTemplateExpression\n        if (b.isTemplateLiteral(expression)) {\n            var result_3 = '';\n            for (var i = 0; i < expression.quasis.length; i++) {\n                var quasi = expression.quasis[i];\n                result_3 += quasi.value.cooked;\n                if (i < expression.expressions.length) {\n                    result_3 += '' + toConstant(expression.expressions[i]);\n                }\n            }\n            return result_3;\n        }\n        if (b.isUnaryExpression(expression)) {\n            var argument = toConstant(expression.argument);\n            if (!constant) {\n                return;\n            }\n            switch (expression.operator) {\n                case '-':\n                    return -argument;\n                case '+':\n                    return +argument;\n                case '!':\n                    return !argument;\n                case '~':\n                    return ~argument;\n                case 'typeof':\n                    return typeof argument;\n                case 'void':\n                    return void argument;\n            }\n        }\n        constant = false;\n    }\n    var result = toConstant(expression);\n    return constant ? { constant: true, result: result } : { constant: false };\n}\nexports.expressionToConstant = expressionToConstant;\nfunction isSpreadable(value) {\n    return (typeof value === 'string' ||\n        Array.isArray(value) ||\n        (typeof Set !== 'undefined' && value instanceof Set) ||\n        (typeof Map !== 'undefined' && value instanceof Map));\n}\nfunction shallowEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        for (var key in a) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        for (var key in b) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction canCallMethod(object, member) {\n    switch (typeof object) {\n        case 'boolean':\n            switch (member) {\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'number':\n            switch (member) {\n                case 'toExponential':\n                case 'toFixed':\n                case 'toPrecision':\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'string':\n            switch (member) {\n                case 'charAt':\n                case 'charCodeAt':\n                case 'codePointAt':\n                case 'concat':\n                case 'endsWith':\n                case 'includes':\n                case 'indexOf':\n                case 'lastIndexOf':\n                case 'match':\n                case 'normalize':\n                case 'padEnd':\n                case 'padStart':\n                case 'repeat':\n                case 'replace':\n                case 'search':\n                case 'slice':\n                case 'split':\n                case 'startsWith':\n                case 'substr':\n                case 'substring':\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    return true;\n                default:\n                    return false;\n            }\n        default:\n            if (object instanceof RegExp) {\n                switch (member) {\n                    case 'test':\n                    case 'exec':\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n            return {}.hasOwnProperty.call(object, member) && member[0] !== '_';\n    }\n}\nvar EMPTY_OBJECT = {};\nvar lastSrc = '';\nvar lastConstants = EMPTY_OBJECT;\nvar lastOptions = EMPTY_OBJECT;\nvar lastResult = null;\nvar lastWasConstant = false;\nfunction isConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (lastSrc === src &&\n        shallowEqual(lastConstants, constants) &&\n        shallowEqual(lastOptions, options)) {\n        return lastWasConstant;\n    }\n    lastSrc = src;\n    lastConstants = constants;\n    var ast;\n    try {\n        ast = parser_1.parseExpression(src, options);\n    }\n    catch (ex) {\n        return (lastWasConstant = false);\n    }\n    var _a = expressionToConstant(ast, { constants: constants }), result = _a.result, constant = _a.constant;\n    lastResult = result;\n    return (lastWasConstant = constant);\n}\nexports.isConstant = isConstant;\nfunction toConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (!isConstant(src, constants, options)) {\n        throw new Error(JSON.stringify(src) + ' is not constant.');\n    }\n    return lastResult;\n}\nexports.toConstant = toConstant;\nexports[\"default\"] = isConstant;\nmodule.exports = isConstant;\nmodule.exports[\"default\"] = isConstant;\nmodule.exports.expressionToConstant = expressionToConstant;\nmodule.exports.isConstant = isConstant;\nmodule.exports.toConstant = toConstant;\n"},"lineCount":369}},"error":null,"hash":"583c712e9f14d7e9165d20d59048f002","cacheData":{"env":{}}}