{"id":"../../node_modules/jstransformer/index.js","dependencies":[{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\package.json","includedInParent":true,"mtime":1699342775613},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\jstransformer\\package.json","includedInParent":true,"mtime":1694927329872},{"name":"fs","loc":{"line":3,"column":17,"index":32},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\jstransformer\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"assert","loc":{"line":4,"column":21,"index":60},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\jstransformer\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\assert\\assert.js"},{"name":"promise","loc":{"line":5,"column":22,"index":93},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\jstransformer\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\promise\\index.js"},{"name":"is-promise","loc":{"line":6,"column":24,"index":129},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\jstransformer\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\is-promise\\index.js"}],"generated":{"js":"'use strict';\n\nvar fs = require('fs');\nvar assert = require('assert');\nvar Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar tr = (module.exports = function (transformer) {\n  return new Transformer(transformer);\n});\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () { throw new Error('fs.readFile unsupported'); };\n  tr.readFileSync = function () { throw new Error('fs.readFileSync unsupported'); };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {fn: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {body: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert([\n    'compile',\n    'compileAsync',\n    'compileFile',\n    'compileFileAsync',\n    'compileClient',\n    'compileClientAsync',\n    'compileFileClient',\n    'compileFileClientAsync',\n    'render',\n    'renderAsync',\n    'renderFile',\n    'renderFileAsync'\n  ].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: [\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile',\n    'renderFile', 'render'\n  ],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: [\n    'compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'\n  ],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: [\n    'renderFileAsync', 'renderFile', 'renderAsync', 'render',\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile'\n  ]\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n\n/* COMPILE */\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) { // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else { // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) { // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else { // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else { // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else { // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  return tr.normalize(this._tr.compileClient(str, options));\n};\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb)\n  }\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* RENDER */\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n    return tr.normalize({body: body, dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  }\n};\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) { // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else { // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({body: compiled.fn(locals || options), dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) { // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync')\n             || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  } else { // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/jstransformer/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/jstransformer/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}}],"sources":{"../../node_modules/jstransformer/index.js":"'use strict';\n\nvar fs = require('fs');\nvar assert = require('assert');\nvar Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar tr = (module.exports = function (transformer) {\n  return new Transformer(transformer);\n});\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () { throw new Error('fs.readFile unsupported'); };\n  tr.readFileSync = function () { throw new Error('fs.readFileSync unsupported'); };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {fn: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {body: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert([\n    'compile',\n    'compileAsync',\n    'compileFile',\n    'compileFileAsync',\n    'compileClient',\n    'compileClientAsync',\n    'compileFileClient',\n    'compileFileClientAsync',\n    'render',\n    'renderAsync',\n    'renderFile',\n    'renderFileAsync'\n  ].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: [\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile',\n    'renderFile', 'render'\n  ],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: [\n    'compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'\n  ],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: [\n    'renderFileAsync', 'renderFile', 'renderAsync', 'render',\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile'\n  ]\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n\n/* COMPILE */\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) { // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else { // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) { // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else { // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else { // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else { // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  return tr.normalize(this._tr.compileClient(str, options));\n};\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb)\n  }\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* RENDER */\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n    return tr.normalize({body: body, dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  }\n};\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) { // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else { // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({body: compiled.fn(locals || options), dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) { // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync')\n             || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  } else { // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};\n"},"lineCount":360}},"error":null,"hash":"1d1ac40a7ca018927b904dfccc9858f5","cacheData":{"env":{}}}