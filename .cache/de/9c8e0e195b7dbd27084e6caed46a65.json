{"id":"../../node_modules/@babel/types/lib/asserts/assertNode.js","dependencies":[{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\asserts\\assertNode.js.map","includedInParent":true,"mtime":1695821069725},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\package.json","includedInParent":true,"mtime":1699342775613},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\package.json","includedInParent":true,"mtime":1695821070792},{"name":"../validators/isNode.js","loc":{"line":7,"column":22,"index":132},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\asserts\\assertNode.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\@babel\\types\\lib\\validators\\isNode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\nvar _isNode = require(\"../validators/isNode.js\");\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n    var type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(\"Not a valid node of type \\\"\".concat(type, \"\\\"\"));\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/asserts/assertNode.ts","name":"_isNode","original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":11}},{"source":"../../src/asserts/assertNode.ts","name":"require","original":{"line":1,"column":0},"generated":{"line":7,"column":14}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":21}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":22}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":47}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":48}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":8,"column":0}},{"source":"../../src/asserts/assertNode.ts","name":"assertNode","original":{"line":4,"column":24},"generated":{"line":8,"column":9}},{"source":"../../src/asserts/assertNode.ts","name":"assertNode","original":{"line":4,"column":34},"generated":{"line":8,"column":19}},{"source":"../../src/asserts/assertNode.ts","name":"node","original":{"line":4,"column":35},"generated":{"line":8,"column":20}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":4,"column":45},"generated":{"line":8,"column":24}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":4,"column":71},"generated":{"line":8,"column":26}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":9,"column":2}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":9,"column":6}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":9,"column":7}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":9,"column":8}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":9,"column":9}},{"source":"../../src/asserts/assertNode.ts","name":"isNode","original":{"line":5,"column":7},"generated":{"line":9,"column":11}},{"source":"../../src/asserts/assertNode.ts","name":"isNode","original":{"line":5,"column":7},"generated":{"line":9,"column":18}},{"source":"../../src/asserts/assertNode.ts","name":"isNode","original":{"line":5,"column":7},"generated":{"line":9,"column":19}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":9,"column":26}},{"source":"../../src/asserts/assertNode.ts","name":"node","original":{"line":5,"column":14},"generated":{"line":9,"column":28}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":9,"column":32}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":9,"column":33}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":9,"column":35}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":10,"column":4}},{"source":"../../src/asserts/assertNode.ts","name":"_node$type","original":{"line":5,"column":21},"generated":{"line":10,"column":8}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":10,"column":18}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":11,"column":4}},{"source":"../../src/asserts/assertNode.ts","name":"type","original":{"line":6,"column":10},"generated":{"line":11,"column":8}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":11,"column":12}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":11,"column":15}},{"source":"../../src/asserts/assertNode.ts","name":"_node$type","original":{"line":6,"column":14},"generated":{"line":11,"column":16}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":11,"column":26}},{"source":"../../src/asserts/assertNode.ts","name":"node","original":{"line":6,"column":17},"generated":{"line":11,"column":29}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":33}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":37}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":41}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":44}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":49}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":50}},{"source":"../../src/asserts/assertNode.ts","name":"node","original":{"line":6,"column":17},"generated":{"line":11,"column":53}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":11,"column":57}},{"source":"../../src/asserts/assertNode.ts","name":"type","original":{"line":6,"column":23},"generated":{"line":11,"column":58}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":11,"column":62}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":11,"column":67}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":11,"column":71}},{"source":"../../src/asserts/assertNode.ts","name":"_node$type","original":{"line":6,"column":27},"generated":{"line":11,"column":74}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":11,"column":84}},{"source":"../../src/asserts/assertNode.ts","name":"JSON","original":{"line":6,"column":31},"generated":{"line":11,"column":87}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":35},"generated":{"line":11,"column":91}},{"source":"../../src/asserts/assertNode.ts","name":"stringify","original":{"line":6,"column":36},"generated":{"line":11,"column":92}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":45},"generated":{"line":11,"column":101}},{"source":"../../src/asserts/assertNode.ts","name":"node","original":{"line":6,"column":46},"generated":{"line":11,"column":102}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":50},"generated":{"line":11,"column":106}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":6,"column":51},"generated":{"line":11,"column":107}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":12,"column":4}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":12,"column":10}},{"source":"../../src/asserts/assertNode.ts","name":"TypeError","original":{"line":7,"column":14},"generated":{"line":12,"column":14}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":12,"column":23}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":12,"column":54}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":12,"column":60}},{"source":"../../src/asserts/assertNode.ts","name":"type","original":{"line":7,"column":53},"generated":{"line":12,"column":61}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":58},"generated":{"line":12,"column":65}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":60},"generated":{"line":12,"column":72}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":12,"column":73}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":13,"column":2}},{"source":"../../src/asserts/assertNode.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../../src/asserts/assertNode.ts":"import isNode from \"../validators/isNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"d0f048b5071af2f452ece0feab8fc005","cacheData":{"env":{}}}