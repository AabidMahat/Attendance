{"id":"../../node_modules/pug-linker/index.js","dependencies":[{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\package.json","includedInParent":true,"mtime":1699342775613},{"name":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-linker\\package.json","includedInParent":true,"mtime":1694927329953},{"name":"assert","loc":{"line":3,"column":21,"index":36},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-linker\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\assert\\assert.js"},{"name":"pug-walk","loc":{"line":4,"column":19,"index":66},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-linker\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-walk\\index.js"},{"name":"pug-error","loc":{"line":7,"column":16,"index":115},"parent":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-linker\\index.js","resolved":"C:\\Users\\aabid\\OneDrive\\Desktop\\Udemy Courses\\Attendance\\node_modules\\pug-error\\index.js"}],"generated":{"js":"'use strict';\n\nvar assert = require('assert');\nvar walk = require('pug-walk');\n\nfunction error() {\n  throw require('pug-error').apply(null, arguments);\n}\n\nmodule.exports = link;\nfunction link(ast) {\n  assert(\n    ast.type === 'Block',\n    'The top level element should always be a block'\n  );\n  var extendsNode = null;\n  if (ast.nodes.length) {\n    var hasExtends = ast.nodes[0].type === 'Extends';\n    checkExtendPosition(ast, hasExtends);\n    if (hasExtends) {\n      extendsNode = ast.nodes.shift();\n    }\n  }\n  ast = applyIncludes(ast);\n  ast.declaredBlocks = findDeclaredBlocks(ast);\n  if (extendsNode) {\n    var mixins = [];\n    var expectedBlocks = [];\n    ast.nodes.forEach(function addNode(node) {\n      if (node.type === 'NamedBlock') {\n        expectedBlocks.push(node);\n      } else if (node.type === 'Block') {\n        node.nodes.forEach(addNode);\n      } else if (node.type === 'Mixin' && node.call === false) {\n        mixins.push(node);\n      } else {\n        error(\n          'UNEXPECTED_NODES_IN_EXTENDING_ROOT',\n          'Only named blocks and mixins can appear at the top level of an extending template',\n          node\n        );\n      }\n    });\n    var parent = link(extendsNode.file.ast);\n    extend(parent.declaredBlocks, ast);\n    var foundBlockNames = [];\n    walk(parent, function(node) {\n      if (node.type === 'NamedBlock') {\n        foundBlockNames.push(node.name);\n      }\n    });\n    expectedBlocks.forEach(function(expectedBlock) {\n      if (foundBlockNames.indexOf(expectedBlock.name) === -1) {\n        error(\n          'UNEXPECTED_BLOCK',\n          'Unexpected block ' + expectedBlock.name,\n          expectedBlock\n        );\n      }\n    });\n    Object.keys(ast.declaredBlocks).forEach(function(name) {\n      parent.declaredBlocks[name] = ast.declaredBlocks[name];\n    });\n    parent.nodes = mixins.concat(parent.nodes);\n    parent.hasExtends = true;\n    return parent;\n  }\n  return ast;\n}\n\nfunction findDeclaredBlocks(ast) /*: {[name: string]: Array<BlockNode>}*/ {\n  var definitions = {};\n  walk(ast, function before(node) {\n    if (node.type === 'NamedBlock' && node.mode === 'replace') {\n      definitions[node.name] = definitions[node.name] || [];\n      definitions[node.name].push(node);\n    }\n  });\n  return definitions;\n}\n\nfunction flattenParentBlocks(parentBlocks, accumulator) {\n  accumulator = accumulator || [];\n  parentBlocks.forEach(function(parentBlock) {\n    if (parentBlock.parents) {\n      flattenParentBlocks(parentBlock.parents, accumulator);\n    }\n    accumulator.push(parentBlock);\n  });\n  return accumulator;\n}\n\nfunction extend(parentBlocks, ast) {\n  var stack = {};\n  walk(\n    ast,\n    function before(node) {\n      if (node.type === 'NamedBlock') {\n        if (stack[node.name] === node.name) {\n          return (node.ignore = true);\n        }\n        stack[node.name] = node.name;\n        var parentBlockList = parentBlocks[node.name]\n          ? flattenParentBlocks(parentBlocks[node.name])\n          : [];\n        if (parentBlockList.length) {\n          node.parents = parentBlockList;\n          parentBlockList.forEach(function(parentBlock) {\n            switch (node.mode) {\n              case 'append':\n                parentBlock.nodes = parentBlock.nodes.concat(node.nodes);\n                break;\n              case 'prepend':\n                parentBlock.nodes = node.nodes.concat(parentBlock.nodes);\n                break;\n              case 'replace':\n                parentBlock.nodes = node.nodes;\n                break;\n            }\n          });\n        }\n      }\n    },\n    function after(node) {\n      if (node.type === 'NamedBlock' && !node.ignore) {\n        delete stack[node.name];\n      }\n    }\n  );\n}\n\nfunction applyIncludes(ast, child) {\n  return walk(\n    ast,\n    function before(node, replace) {\n      if (node.type === 'RawInclude') {\n        replace({type: 'Text', val: node.file.str.replace(/\\r/g, '')});\n      }\n    },\n    function after(node, replace) {\n      if (node.type === 'Include') {\n        var childAST = link(node.file.ast);\n        if (childAST.hasExtends) {\n          childAST = removeBlocks(childAST);\n        }\n        replace(applyYield(childAST, node.block));\n      }\n    }\n  );\n}\nfunction removeBlocks(ast) {\n  return walk(ast, function(node, replace) {\n    if (node.type === 'NamedBlock') {\n      replace({\n        type: 'Block',\n        nodes: node.nodes,\n      });\n    }\n  });\n}\n\nfunction applyYield(ast, block) {\n  if (!block || !block.nodes.length) return ast;\n  var replaced = false;\n  ast = walk(ast, null, function(node, replace) {\n    if (node.type === 'YieldBlock') {\n      replaced = true;\n      node.type = 'Block';\n      node.nodes = [block];\n    }\n  });\n  function defaultYieldLocation(node) {\n    var res = node;\n    for (var i = 0; i < node.nodes.length; i++) {\n      if (node.nodes[i].textOnly) continue;\n      if (node.nodes[i].type === 'Block') {\n        res = defaultYieldLocation(node.nodes[i]);\n      } else if (node.nodes[i].block && node.nodes[i].block.nodes.length) {\n        res = defaultYieldLocation(node.nodes[i].block);\n      }\n    }\n    return res;\n  }\n  if (!replaced) {\n    // todo: probably should deprecate this with a warning\n    defaultYieldLocation(ast).nodes.push(block);\n  }\n  return ast;\n}\n\nfunction checkExtendPosition(ast, hasExtends) {\n  var legitExtendsReached = false;\n  walk(ast, function(node) {\n    if (node.type === 'Extends') {\n      if (hasExtends && !legitExtendsReached) {\n        legitExtendsReached = true;\n      } else {\n        error(\n          'EXTENDS_NOT_FIRST',\n          'Declaration of template inheritance (\"extends\") should be the first thing in the file. There can only be one extends statement per file.',\n          node\n        );\n      }\n    }\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/pug-linker/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/pug-linker/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}}],"sources":{"../../node_modules/pug-linker/index.js":"'use strict';\n\nvar assert = require('assert');\nvar walk = require('pug-walk');\n\nfunction error() {\n  throw require('pug-error').apply(null, arguments);\n}\n\nmodule.exports = link;\nfunction link(ast) {\n  assert(\n    ast.type === 'Block',\n    'The top level element should always be a block'\n  );\n  var extendsNode = null;\n  if (ast.nodes.length) {\n    var hasExtends = ast.nodes[0].type === 'Extends';\n    checkExtendPosition(ast, hasExtends);\n    if (hasExtends) {\n      extendsNode = ast.nodes.shift();\n    }\n  }\n  ast = applyIncludes(ast);\n  ast.declaredBlocks = findDeclaredBlocks(ast);\n  if (extendsNode) {\n    var mixins = [];\n    var expectedBlocks = [];\n    ast.nodes.forEach(function addNode(node) {\n      if (node.type === 'NamedBlock') {\n        expectedBlocks.push(node);\n      } else if (node.type === 'Block') {\n        node.nodes.forEach(addNode);\n      } else if (node.type === 'Mixin' && node.call === false) {\n        mixins.push(node);\n      } else {\n        error(\n          'UNEXPECTED_NODES_IN_EXTENDING_ROOT',\n          'Only named blocks and mixins can appear at the top level of an extending template',\n          node\n        );\n      }\n    });\n    var parent = link(extendsNode.file.ast);\n    extend(parent.declaredBlocks, ast);\n    var foundBlockNames = [];\n    walk(parent, function(node) {\n      if (node.type === 'NamedBlock') {\n        foundBlockNames.push(node.name);\n      }\n    });\n    expectedBlocks.forEach(function(expectedBlock) {\n      if (foundBlockNames.indexOf(expectedBlock.name) === -1) {\n        error(\n          'UNEXPECTED_BLOCK',\n          'Unexpected block ' + expectedBlock.name,\n          expectedBlock\n        );\n      }\n    });\n    Object.keys(ast.declaredBlocks).forEach(function(name) {\n      parent.declaredBlocks[name] = ast.declaredBlocks[name];\n    });\n    parent.nodes = mixins.concat(parent.nodes);\n    parent.hasExtends = true;\n    return parent;\n  }\n  return ast;\n}\n\nfunction findDeclaredBlocks(ast) /*: {[name: string]: Array<BlockNode>}*/ {\n  var definitions = {};\n  walk(ast, function before(node) {\n    if (node.type === 'NamedBlock' && node.mode === 'replace') {\n      definitions[node.name] = definitions[node.name] || [];\n      definitions[node.name].push(node);\n    }\n  });\n  return definitions;\n}\n\nfunction flattenParentBlocks(parentBlocks, accumulator) {\n  accumulator = accumulator || [];\n  parentBlocks.forEach(function(parentBlock) {\n    if (parentBlock.parents) {\n      flattenParentBlocks(parentBlock.parents, accumulator);\n    }\n    accumulator.push(parentBlock);\n  });\n  return accumulator;\n}\n\nfunction extend(parentBlocks, ast) {\n  var stack = {};\n  walk(\n    ast,\n    function before(node) {\n      if (node.type === 'NamedBlock') {\n        if (stack[node.name] === node.name) {\n          return (node.ignore = true);\n        }\n        stack[node.name] = node.name;\n        var parentBlockList = parentBlocks[node.name]\n          ? flattenParentBlocks(parentBlocks[node.name])\n          : [];\n        if (parentBlockList.length) {\n          node.parents = parentBlockList;\n          parentBlockList.forEach(function(parentBlock) {\n            switch (node.mode) {\n              case 'append':\n                parentBlock.nodes = parentBlock.nodes.concat(node.nodes);\n                break;\n              case 'prepend':\n                parentBlock.nodes = node.nodes.concat(parentBlock.nodes);\n                break;\n              case 'replace':\n                parentBlock.nodes = node.nodes;\n                break;\n            }\n          });\n        }\n      }\n    },\n    function after(node) {\n      if (node.type === 'NamedBlock' && !node.ignore) {\n        delete stack[node.name];\n      }\n    }\n  );\n}\n\nfunction applyIncludes(ast, child) {\n  return walk(\n    ast,\n    function before(node, replace) {\n      if (node.type === 'RawInclude') {\n        replace({type: 'Text', val: node.file.str.replace(/\\r/g, '')});\n      }\n    },\n    function after(node, replace) {\n      if (node.type === 'Include') {\n        var childAST = link(node.file.ast);\n        if (childAST.hasExtends) {\n          childAST = removeBlocks(childAST);\n        }\n        replace(applyYield(childAST, node.block));\n      }\n    }\n  );\n}\nfunction removeBlocks(ast) {\n  return walk(ast, function(node, replace) {\n    if (node.type === 'NamedBlock') {\n      replace({\n        type: 'Block',\n        nodes: node.nodes,\n      });\n    }\n  });\n}\n\nfunction applyYield(ast, block) {\n  if (!block || !block.nodes.length) return ast;\n  var replaced = false;\n  ast = walk(ast, null, function(node, replace) {\n    if (node.type === 'YieldBlock') {\n      replaced = true;\n      node.type = 'Block';\n      node.nodes = [block];\n    }\n  });\n  function defaultYieldLocation(node) {\n    var res = node;\n    for (var i = 0; i < node.nodes.length; i++) {\n      if (node.nodes[i].textOnly) continue;\n      if (node.nodes[i].type === 'Block') {\n        res = defaultYieldLocation(node.nodes[i]);\n      } else if (node.nodes[i].block && node.nodes[i].block.nodes.length) {\n        res = defaultYieldLocation(node.nodes[i].block);\n      }\n    }\n    return res;\n  }\n  if (!replaced) {\n    // todo: probably should deprecate this with a warning\n    defaultYieldLocation(ast).nodes.push(block);\n  }\n  return ast;\n}\n\nfunction checkExtendPosition(ast, hasExtends) {\n  var legitExtendsReached = false;\n  walk(ast, function(node) {\n    if (node.type === 'Extends') {\n      if (hasExtends && !legitExtendsReached) {\n        legitExtendsReached = true;\n      } else {\n        error(\n          'EXTENDS_NOT_FIRST',\n          'Declaration of template inheritance (\"extends\") should be the first thing in the file. There can only be one extends statement per file.',\n          node\n        );\n      }\n    }\n  });\n}\n"},"lineCount":207}},"error":null,"hash":"1b6b78682d839ab3a3e6f1f249f32b3a","cacheData":{"env":{}}}